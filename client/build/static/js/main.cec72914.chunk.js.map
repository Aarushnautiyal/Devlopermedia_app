{"version":3,"sources":["utils/setAuthToken.js","actions/types.js","actions/alert.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","components/dashboard/DashboardAction.js","actions/profile.js","components/dashboard/Experience.js","components/layout/spinner.gif","components/layout/Spinner.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/profile-form/AddEducation.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","USER_LOADED","AUTH_ERROR","GET_REPOS","GET_PROFILE","GET_POST","GET_POSTS","GET_PROFILES","CLEAR_PROFILE","UPDATE_PROFILE","UPDATE_LIKES","PROFILE_ERROR","POST_ERROR","DELETE_POST","ADD_POST","DELETE_ACCOUNT","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","guestLinks","login","email","password","config","body","JSON","stringify","post","useState","formData","setformData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","register","errors","response","console","password2","alerts","alert","length","map","DashboardAction","class","getCurrentProfile","statusText","status","createProfile","history","edit","setALert","push","forEach","error","deleteExperience","delete","experience","experiences","exp","company","title","formate","form","_id","Spinner","src","spinner","style","width","margin","display","alt","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","PropTypes","func","isRequired","window","confirm","user","useEffect","Component","component","rest","render","props","withRouter","website","location","bio","githubusername","skills","youtube","facebook","twitter","instagram","linkedin","setFormData","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","from","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","href","rel","ProfileAbout","trim","split","ProfileExperience","loacation","format","ProfileEducation","fieldofstudy","repos","getGithubRepos","username","repo","html_url","forks_count","getProfileById","userId","match","params","PostItem","deletePost","addLike","removeLike","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","removeComment","commentId","comment","getPost","initialState","action","filter","getItem","setItem","removeItem","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","addEducation","App","exact","path","Landing","Login","Register","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cec72914.chunk.js","sourcesContent":["import axios from 'axios'\n// import { delete } from 'request'\n\nconst setAuthToken = token =>{\n    if(token){\n        axios.defaults.headers.common['x-auth-token'] = token\n    }else{\n        delete axios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default setAuthToken","export const SET_ALERT = \"SET_ALERT\"\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGOUT = 'LOGOUT'\nexport const USER_LOADED = 'USER_LOADED'\nexport const AUTH_ERROR = 'AUTH_ERROR'\nexport const GET_REPOS = 'GET_REPOS'\nexport const GET_PROFILE = 'GET_PROFILE'\nexport const GET_POST = 'GET_POST'\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_PROFILES = 'GET_PROFILES'\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\nexport const UPDATE_LIKES = 'UPDATE_LIKES'\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\nexport const POST_ERROR = 'POST_ERROR'\nexport const DELETE_POST = 'DELETE_POST'\nexport const ADD_POST = 'ADD_POST'\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT'\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT'","import {v4 as uuid} from 'uuid'\nimport {SET_ALERT, REMOVE_ALERT} from './types'\n\nconst  setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    const id = uuid()\n    dispatch({\n        type: SET_ALERT,\n        payload:{msg, alertType, id}\n    })\n\n    setTimeout(()=> dispatch({type: REMOVE_ALERT,\n        payload:id}), timeout)\n}\n\n\nexport default setAlert\n","import axios from 'axios'\nimport setAuthToken from '../utils/setAuthToken'\nimport setAlert from './alert'\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    CLEAR_PROFILE\n} from './types'\n\n// load user\nexport const loadUser = () =>async dispatch=>{\n    if(localStorage.token){\n        setAuthToken(localStorage.token)\n    }\n    try {\n        const res = await axios.get('/api/auth')\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:AUTH_ERROR\n        })\n    }\n}\n\n// REGISTER USER\n\nexport const register = ({name,email,password}) => async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type' : 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({name,email,password})\n    try {\n        const res = await axios.post('/api/user', body, config)\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n        dispatch(loadUser())\n    } catch (err) {\n        const errors = err.response.data.console.errors\n\n        if(errors){\n            dispatch(setAlert(errors.msg,'danger'))\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n// LOGIN USER\n\nexport const login = (email,password) => async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type' : 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({email,password})\n    try {\n        const res = await axios.post('/api/auth', body, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n        dispatch(loadUser())\n\n    } catch (err) {\n        \n        dispatch(setAlert('Please check your email and password then try again ', 'danger'))\n\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n}\n\nexport const logout = () => dispatch =>{\n    dispatch({\n        type: CLEAR_PROFILE\n    })\n    dispatch({\n        type: LOGOUT\n    })\n} ","import React, { Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {logout} from '../../actions/auth'\n\nconst Navbar = ({auth:{isAuthenticated, loading}, logout}) => {\n    \n    const authLinks = (\n        <ul>\n            <li><Link to =\"/profiles\">Devlopers\n                </Link>\n            </li>\n            <li><Link to =\"/posts\">\n                <i className=\"fas fa-mail-bulk\"/>{' '}\n                <span className=\"hide-sm\">Posts</span>\n                </Link>\n            </li>\n            <li><Link to =\"/dashboard\">\n                <i className=\"fas fa-user\"/>{' '}\n                <span className=\"hide-sm\">Dashboard</span>\n                </Link>\n            </li>\n            <li><Link onClick={logout} to=\"/\">\n                 <i className=\"fas fa-sign-out-alt\"/>{' '}\n                 <span className=\"hide-sm\">Logout</span> \n            </Link>\n            </li>\n        </ul>\n    )\n    const guestLinks = (\n        <ul>\n                <li><Link to =\"/profiles\">Developers</Link></li>\n                <li><Link to =\"/register\">Register</Link></li>\n                <li><Link to =\"/login\">Login</Link></li>\n            </ul>\n    )\n    \n    return (\n        <nav className =\"navbar bg-dark\">\n            <h1>\n                <Link to=\"/\"><i className =\"fas fa-code\"></i> DevloperMedia</Link>\n            </h1>\n    {!loading && (<Fragment>{isAuthenticated? authLinks : guestLinks }</Fragment>)}\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    logout : PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\n\n\nconst mapStateToProps = state =>({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps,{logout}) (Navbar)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {Link, Redirect} from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\n const Landing = ({isAuthenticated}) => {\n\n    if(isAuthenticated){\n       return  <Redirect to = '/dashboard'/>\n    }\n    return (\n        <section className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                    <h1 className=\"x-large\">Developer Media</h1>\n                    <p className=\"lead\">\n                    Create a developer profile/portfolio, share posts and get help from\n                    other developers\n                    </p>\n                    <div className=\"buttons\">\n                    <Link to =\"/register\" className=\"btn btn-primary\">Sign Up</Link>\n                    <Link to =\"/login\" className=\"btn btn-light\">Login</Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nLanding.propTypes = {\n    isAuthenticated:PropTypes.bool\n}\n\nconst mapSateToProps = state =>({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapSateToProps)  (Landing)","import React, { Fragment, useState } from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {login} from '../../actions/auth'\n\nconst Login = ({login, isAuthenticated}) => {\n    const[formData, setformData] = useState ({\n        email:'',\n        password:''\n    })\n\n    const { email, password} = formData \n\n    const onChange = e => setformData({...formData,[e.target.name]:e.target.value})\n\n    const onSubmit = async e =>{\n        e.preventDefault()\n        login(email, password)\n    }\n// redirect if login\n    if(isAuthenticated){\n        return <Redirect to = '/dashboard'/>\n    }\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign In to Your Account</p>\n            <form className=\"form\" onSubmit = {e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input \n                type=\"email\" \n                placeholder=\"Email Address\" \n                name=\"email\" \n                value = {email}\n                onChange = {e => onChange(e)}\n                required/>\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    minLength=\"6\"\n                    value = {password}\n                    onChange = {e => onChange(e)}\n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to =\"/register\">Sign Up</Link>\n            </p>\n        </Fragment>\n    )\n}\n\nLogin.propTypes = {\n    login:PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state =>({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {login}) (Login)\n","import React,{Fragment, useState} from 'react'\nimport {connect} from 'react-redux'\n// import axios from 'axios'\nimport {Link, Redirect} from 'react-router-dom'\nimport setAlert from '../../actions/alert'\nimport PropTypes from 'prop-types'\nimport { register } from '../../actions/auth'\n\nconst Register = ({setAlert, register, isAuthenticated}) => {\n\n    const[formData, setformData] = useState({\n        name:'',\n        email:'',\n        password:'',\n        password2:''\n    })\n\n    const {name, email, password, password2} = formData \n\n    const onChange = e => setformData({...formData,[e.target.name]:e.target.value})\n\n    const onSubmit = async e =>{\n        e.preventDefault()\n        if(password !== password2){\n            setAlert('Please input same password on both boxes','danger')\n        }else{\n            // testing the backend & frontend using axios\n            // const newUser ={\n            //     name, \n            //     email,\n            //     password\n            // }\n\n            // try {\n            //     const config = {\n            //         headers : {\"Content-Type\" :\"application/json\"}\n            //     }\n\n            //     const body = JSON.stringify(newUser)\n\n            //     const res = await axios.post('/api/user',body,config)\n\n            //     console.log(res.data)\n\n            // } catch (err) {\n            //     console.error(err.res.data)                \n            // }\n            // success\n            register({name, email, password})\n        }\n    }\n// redirect if registered\n    if(isAuthenticated){\n        return <Redirect to = '/dashboard'/>\n    }\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            <form className=\"form\" onSubmit = {e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <input \n                type=\"text\" \n                placeholder=\"Name\" \n                name=\"name\" \n                value = {name}\n                onChange = {e => onChange(e)}\n                required />\n                </div>\n                <div className=\"form-group\">\n                <input \n                type=\"email\" \n                placeholder=\"Email Address\" \n                name=\"email\" \n                value = {email}\n                onChange = {e => onChange(e)}\n                required/>\n                <small className=\"form-text\"\n                    >This site uses Gravatar so if you want a profile image, use a\n                    Gravatar email</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    minLength=\"6\"\n                    value = {password}\n                    onChange = {e => onChange(e)}\n                />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    minLength=\"6\"\n                    value = {password2}\n                    onChange = {e => onChange(e)}\n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    )\n}\nRegister.propTypes = {\n    setAlert : PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state =>({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {setAlert, register})(Register)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n/*i destructures the props and get alerts out of it so \n    i don't have to use props.alerts all the time*/\n\nconst Alert = ({alerts}) => \nalerts!== null && \nalerts.length > 0  && \nalerts.map(alert =>(\n    <div key = {alert.id} className = {`alert alert-${alert.alertType}`} >\n        {alert.msg}\n    </div>\n))\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state =>({\n    alerts: state.alert\n})\n\nexport default connect(mapStateToProps) (Alert)\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst DashboardAction = () => {\n    return (\n        <Fragment>\n            <div class=\"dash-buttons\">\n                <Link to=\"/edit-profile\" class=\"btn btn-light\">\n                    <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile\n                </Link>\n                <Link to=\"/add-experience\" class=\"btn btn-light\">\n                    <i class=\"fab fa-black-tie text-primary\"></i> Add Experience\n                </Link> \n                <Link to=\"/add-education\" class=\"btn btn-light\">\n                    <i class=\"fas fa-graduation-cap text-primary\"></i> Add Education\n                </Link>\n            </div>\n        </Fragment>\n    )\n}\n \nexport default DashboardAction","import axios from 'axios'\nimport setALert from './alert'\nimport{\n    CLEAR_PROFILE,\n    DELETE_ACCOUNT,\n    GET_PROFILES,\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    GET_REPOS\n} from './types'\n\n// get current profile\n\nexport const getCurrentProfile = () => async dispatch =>{\n    try {\n        const res = await axios.get('/api/profile/me')\n        dispatch({\n            type:GET_PROFILE,\n            payload:res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n\n// get Profiles\n\nexport const getProfiles = () => async dispatch =>{\n    dispatch({\n        type:CLEAR_PROFILE\n    })\n    try {\n        const res = await axios.get('/api/profile')\n        dispatch({\n            type:GET_PROFILES,\n            payload:res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n// get profile by id\nexport const getProfileById = userId => async dispatch =>{\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`)\n        dispatch({\n            type:GET_PROFILE,\n            payload:res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n\n// get githubrepos\nexport const getGithubRepos = username => async dispatch =>{\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`)\n        dispatch({\n            type:GET_REPOS,\n            payload:res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n\n// Create or Update Profile\n \nexport const createProfile = (formData, history, edit = false) => async dispatch=>{\n    try {\n        const config = {\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n        const res = await axios.post('/api/profile',formData,config)\n        dispatch({\n            type:GET_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(\n            setALert(edit?\"Profile Updated\": \"Profile Created\", 'success')\n        )\n        if(!edit){\n            history.push('./dashboard')\n        }\n    } catch (err) {\n        const errors = err.response.data.errors\n\n        if(errors){\n            errors.forEach(error=>dispatch(\n                setALert(error.msg,'danger')));\n        }\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n\n// Add education\nexport const addEducation = (formData, history) => async dispatch =>{\n    try {\n        const config = {\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n        const res = await axios.put('/api/profile/education',formData,config)\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(\n            setALert(\"Education Added\", 'success')\n        )\n            history.push('./dashboard')\n    } catch (err) {\n        const errors = err.response.data.errors\n\n        if(errors){\n            errors.forEach(error=>dispatch(\n                setALert(error.msg,'danger')));\n        }\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n\n\n// Add experience\nexport const addExperience = (formData, history) => async dispatch =>{\n    try {\n        const config = {\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n        const res = await axios.put('/api/profile/experience',formData,config)\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(\n            setALert(\"Experience Added\", 'success')\n        )\n            history.push('./dashboard')\n    } catch (err) {\n        const errors = err.response.data.errors\n\n        if(errors){\n            errors.forEach(error=>dispatch(\n                setALert(error.msg,'danger')));\n        }\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n\n// Delete  Experience\n\nexport const deleteExperience = id => async dispatch =>{\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`)\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(\n            setALert(\"Experience Deleted\", 'success')\n        )\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n// Delete an Education\n\nexport const deleteEducation = id => async dispatch =>{\n    try {\n        const res = await axios.delete(`/api/profile/education/${id}`)\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(\n            setALert(\"Education Deleted\", 'success')\n        )\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n\n// Delete Account and profile\nexport const deleteAccount = id => async dispatch =>{\n    if(window.confirm('Are you sure? Once deleted you will lose all your data')){\n        try {\n            await axios.delete(`/api/profile`)\n            dispatch({\n                type:CLEAR_PROFILE\n            })\n            dispatch({\n                type:DELETE_ACCOUNT\n            })\n    \n            dispatch(\n                setALert(\"Account permanently Deleted\", 'success')\n            )\n        } catch (err) {\n            dispatch({\n                type:PROFILE_ERROR,\n                payload:{msg:err.response.statusText, status:err.response.status}\n            })\n        }\n    }\n}","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Moment from 'react-moment'\nimport {deleteExperience} from '../../actions/profile'\n\nconst Experience = ({experience, deleteExperience}) => {\n    const experiences = experience.map(exp=>(\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className='hide-sm'>{exp.title}</td>\n            <td>\n            <Moment formate = 'YYYY/MM/DD'>{exp.form}</Moment> - {' '}\n            {exp.to === null?(\n                'Now'\n            ):(<Moment formate = 'YYYY/MM/DD'>{exp.to}</Moment>)}\n            </td>\n            <td>\n                <button onClick={() => deleteExperience(exp._id)} className='btn btn-danger'>Delete</button>\n            </td>\n         </tr>\n    ))\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Experience</h2>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>Company</th>\n                        <th className='hide-sm'>Title</th>\n                        <th className='hide-sm'>Years</th>\n                        <th/>\n                    </tr>\n                </thead>\n                    <tbody>{experiences}</tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nExperience.propTypes = {\n    experience:PropTypes.array.isRequired,\n    deleteExperience:PropTypes.func.isRequired\n}\n\nexport default connect(null,{deleteExperience}) (Experience)\n","export default __webpack_public_path__ + \"static/media/spinner.455f3ef8.gif\";","import React, { Fragment } from 'react'\nimport spinner from './spinner.gif'\nconst Spinner = () => {\n    return (\n        <Fragment>\n            <img src = {spinner}\n            style = {{width: '200px', margin: 'auto', display: 'block'}}\n            alt=\"loading...\"\n            />\n        </Fragment>\n    )\n}\n\nexport default Spinner\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Moment from 'react-moment'\nimport {deleteEducation} from '../../actions/profile'\n\nconst Education = ({education, deleteEducation}) => {\n    const educations = education.map(edu=>(\n        <tr key={edu._id}>\n            <td>{edu.school}</td>\n            <td className='hide-sm'>{edu.degree}</td>\n            <td>\n            <Moment formate = 'YYYY/MM/DD'>{edu.form}</Moment> - {' '}\n            {edu.to === null?(\n                'Now'\n            ):(<Moment formate = 'YYYY/MM/DD'>{edu.to}</Moment>)}\n            </td>\n            <td>\n                <button onClick={()=>deleteEducation(edu._id)} className='btn btn-danger'>Delete</button>\n            </td>\n         </tr>\n    ))\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Education</h2>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>School</th>\n                        <th className='hide-sm'>Degree</th>\n                        <th className='hide-sm'>Years</th>\n                        <th/>\n                    </tr>\n                </thead>\n                    <tbody>{educations}</tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nEducation.propTypes = {\n    education:PropTypes.array.isRequired,\n    deleteEducation:PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteEducation}) (Education)\n","import React,{Fragment, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport DashboardAction from './DashboardAction'\nimport Experience from './Experience'\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile'\nimport Spinner from '../layout/Spinner'\nimport Education from './Education'\n\nconst Dashboard = ({getCurrentProfile,deleteAccount,auth:{user},profile:{profile, loading}})=> {\n    useEffect(() => {\n        getCurrentProfile()\n    },[getCurrentProfile])\n\n    return loading && profile === null ? <Spinner/>: <Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className= \"lead\">\n    <i className=\"fas fa-user\"></i>Welcome {user && user.name}</p>\n    {profile!==null?\n    <Fragment>\n        <DashboardAction/>\n        <Experience experience={profile.experience}/>\n        <Education education={profile.education}/>\n        <div className='my-2'>\n            <button className='btn btn-danger'onClick={()=>deleteAccount()}>\n                <i className='fas fa-user-minus'>Delete My Account</i>\n            </button>\n        </div>\n    </Fragment>:\n    <Fragment>\n    <p>\n        No profile found, Please add some info\n    </p>\n    <Link to = '/create-profile' className=\"btn btn-primary my-1\">CREATE PROFILE</Link>\n    </Fragment>}\n    </Fragment>\n}\n\nDashboard.propTypes = {\n    getCurrentProfile:PropTypes.func.isRequired,\n    auth:PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state =>({\n    auth:state.auth,\n    profile: state.profile,\n    deleteAccount:PropTypes.func.isRequired\n})\n\n\nexport default connect(mapStateToProps,{deleteAccount,getCurrentProfile}) (Dashboard)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute =({component: Component, auth:{isAuthenticated, loading}, ...rest}) =>(\n    <Route \n    {...rest}\n    render = {props=>\n        !isAuthenticated&&!loading?\n        (<Redirect to ='/login' />):\n        (<Component{...props}/>)}\n    />\n)\n\nPrivateRoute.propTypes = {\n    auth:PropTypes.object.isRequired\n}\nconst mapStateToProps = state =>({\n    auth: state.auth\n})\nexport default connect(mapStateToProps) (PrivateRoute)\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport {createProfile} from '../../actions/profile'\n\nconst CreateProfile = ({createProfile, history}) => {\n    const [formData, setFormData] = useState({\n        company:'',\n        website:'',\n        location:'',\n        bio:'',\n        status:'',\n        githubusername:'',\n        skills:'',\n        youtube:'',\n        facebook:'',\n        twitter:'',\n        instagram:'',\n        linkedin:''\n    })\n\n    const {\n        company,\n        website,\n        location,\n        bio,\n        status,\n        githubusername,\n        skills,\n        youtube,\n        facebook,\n        twitter,\n        instagram,\n        linkedin\n    } = formData\n\n    const onChange =e => setFormData({...formData, [e.target.name]:e.target.value})\n    const onSubmit = e =>{\n        e.preventDefault()\n        createProfile(formData,history)\n    }\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\n\n    return (\n        <Fragment>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={()=>toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs&& <Fragment>\n            \n            <div className=\"form-group social-input\">\n          <i className=\"fab fa-twitter fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-facebook fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\"value={facebook} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-youtube fa-2x\"></i>\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\"value={youtube} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-linkedin fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-instagram fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\n        </div>\n\n        </Fragment>}\n\n        \n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to =\"/dashboard\">Go Back</Link>\n      </form>\n        </Fragment>\n    )\n}\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired\n}\n\n\nexport default connect(null,{createProfile}) (withRouter(CreateProfile))\n","import React, { Fragment, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport {createProfile, getCurrentProfile} from '../../actions/profile'\n\nconst EditProfile = ({profile:{profile, loading}, createProfile, getCurrentProfile, history}) => {\n    const [formData, setFormData] = useState({\n        company:'',\n        website:'',\n        location:'',\n        bio:'',\n        status:'',\n        githubusername:'',\n        skills:'',\n        youtube:'',\n        facebook:'',\n        twitter:'',\n        instagram:'',\n        linkedin:''\n    })\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\n\n    useEffect(()=>{\n      getCurrentProfile()\n      setFormData({\n        company: loading || !profile.company?\"\": profile.company,\n        website: loading || !profile.website?\"\": profile.website,\n        location: loading || !profile.location?\"\": profile.location,\n        bio: loading || !profile.bio?\"\": profile.bio,\n        status: loading || !profile.status?\"\": profile.status,\n        githubusername: loading || !profile.githubusername?\"\": profile.githubusername,\n        skills: loading || !profile.skills?\"\": profile.skills.join(','),\n        facebook: loading || !profile.social?\"\": profile.social.facebook,\n        twitter: loading || !profile.social?\"\": profile.social.twitter,\n        instagram: loading || !profile.social?\"\": profile.social.instagram,\n        linkedin: loading || !profile.social?\"\": profile.social.linkedin,\n        youtube: loading || !profile.social?\"\": profile.social.youtube,\n      })\n    },[loading, getCurrentProfile]) \n\n    const {\n        company,\n        website,\n        location,\n        bio,\n        status,\n        githubusername,\n        skills,\n        youtube,\n        facebook,\n        twitter,\n        instagram,\n        linkedin\n    } = formData\n\n    const onChange =e => setFormData({...formData, [e.target.name]:e.target.value})\n    const onSubmit = e =>{\n        e.preventDefault()\n        createProfile(formData,history,true)\n    }\n\n    return (\n        <Fragment>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={()=>toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs&& <Fragment>\n            \n            <div className=\"form-group social-input\">\n          <i className=\"fab fa-twitter fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-facebook fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\"value={facebook} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-youtube fa-2x\"></i>\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\"value={youtube} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-linkedin fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-instagram fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\n        </div>\n\n        </Fragment>}\n\n        \n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to =\"/dashboard\">Go Back</Link>\n      </form>\n        </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n  profile : state.profile\n})\n\nexport default connect(mapStateToProps,{createProfile, getCurrentProfile}) (withRouter(EditProfile))\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {addExperience} from '../../actions/profile'\nimport {Link, withRouter} from 'react-router-dom'\n\nconst AddExperience = ({addExperience,history}) => {\n    const [formData, setFormData] = useState({\n        title:\"\",\n        company:\"\",\n        location:\"\",\n        from:\"\",\n        to:\"\",\n        current:false,\n        description:\"\"\n    })\n\n    const [toDateDisabled, toggleDisabled] = useState(false)\n    const {title, company, location, from, to, current, description} = formData\n\n    const onChange = e=> setFormData({...formData, [e.target.name]: e.target.value})\n\n    return (\n        <Fragment>\n             <h1 className=\"large text-primary\">\n                 Add An Experience\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n                positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=>{\n                e.preventDefault()\n                addExperience(formData,history)\n            }}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange = { e => onChange(e) } required />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange = { e => onChange(e) } required  />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value = {location} onChange = { e => onChange(e) } />\n                </div>\n                <div className=\"form-group\">\n                <h4>From Date</h4>\n                <input type=\"date\" name=\"from\" value={from} onChange = { e => onChange(e) } />\n                </div>\n                <div className=\"form-group\">\n                <p><input type=\"checkbox\" checked = {current} name=\"current\" value={current} onChange = { e =>{\n                    setFormData({...formData,current:!current})\n                    toggleDisabled(!toDateDisabled)\n                }} /> {' '}Current Job</p>\n                </div>\n                <div className=\"form-group\">\n                <h4>To Date</h4>\n                <input type=\"date\" name=\"to\" value={to} onChange = { e => onChange(e)} disabled ={toDateDisabled ? 'disabled':''}/>\n                </div>\n                <div className=\"form-group\">\n                <textarea\n                    name=\"description\"\n                    cols=\"30\"\n                    rows=\"5\"\n                    placeholder=\"Job Description\"\n                    value={description}\n                    onChange = { e => onChange(e) }\n                ></textarea>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, {addExperience}) (withRouter(AddExperience))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst ProfileItem = ({profile:{\n    user:{_id,name,avatar},\n    status,company,skills,location\n}}) => {\n    return (\n        <div className='profile bg-light'>\n            <img src = {avatar} alt=\"\" className='round-img' ></img>\n            <div>\n                 <h2>{name}</h2>\n                <p>{status}{company && <span> at {company}</span>}</p>\n                <Link to = {`/profile/${_id}`} className='btn btn-primary'>\n                    View Profile\n                </Link>\n            </div>\n            <ul>\n                {skills.slice(0,4).map((skill, index)=>(\n                    <li key ={index} className='text-primary'>\n                        <i className=\"fas fa-check\"></i>{skill}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nProfileItem.propTypes = {\n    profile:PropTypes.object.isRequired\n}\n\nexport default ProfileItem\n","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {getProfiles} from '../../actions/profile'\nimport Spinner from '../layout/Spinner'\nimport ProfileItem from './ProfileItem'\nimport { withRouter } from 'react-router-dom'\n\nconst Profiles = ({getProfiles, profile:{profiles, loading}}) => {\n    useEffect(() => {\n            getProfiles()\n    }, [getProfiles]) \n    return (\n        <Fragment>\n            {loading? <Spinner/>:<Fragment>\n                <h1 className=\"large text-primary\">Devlopers</h1>\n                <p className=\"lead\">\n                    <i className='fab fa-connectdevelop'></i> Browse and connect with the devlopers around the globe\n                </p>\n                <div className='profiles'>\n                    {profiles.length > 0 ? (\n                        profiles.map(profile=>(\n                            <ProfileItem key={profile._id} profile={profile}></ProfileItem>\n                        ))\n                    ) :<Spinner/>}\n                </div>\n                </Fragment>}\n        </Fragment>\n    )\n}\n\nProfiles.propTypes = {\n    getProfiles:PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps,{getProfiles}) (withRouter(Profiles))\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileTop = ({profile:{\n    status,\n    company,\n    location,\n    website,\n    social,\n    user:{avatar,name}\n}}) => { \n    return (\n        <div class=\"profile-top bg-primary p-2\">\n          <img\n            class=\"round-img my-1\"\n            src={avatar}\n            alt=\"\"\n          />\n          <h1 class=\"large\">{name}</h1>\n    <p class=\"lead\">{status}{company &&<span> at {company}</span>}</p>\n    <p>{location && <span>  {location}</span>}</p>\n          <div class=\"icons my-1\">\n            {\n                website &&(\n                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i class=\"fas fa-globe fa-2x\"></i>\n                    </a>\n                )\n            }\n            {\n                social &&social.twitter &&(\n                    <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i class=\"fab fa-twitter fa-2x\"></i>\n                    </a>\n                )\n            }\n            {\n                social && social.facebook &&(\n                    <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i class=\"fab fa-facebook fa-2x\"></i>\n                  </a>\n                )\n            }\n            {\n                social && social.linkedin &&(\n                    <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i class=\"fab fa-linkedin fa-2x\"></i>\n                    </a>\n                )\n            }\n            {\n                social && social.youtube &&(\n                    <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i class=\"fab fa-youtube fa-2x\"></i>\n                    </a>\n                )\n            }\n            {\n                social && social.instagram &&(\n                    <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i class=\"fab fa-instagram fa-2x\"></i>\n                    </a>\n                )\n            }\n            \n          </div>\n          </div>\n    )\n}\n\nProfileTop.propTypes = {\n    profile: PropTypes.object.isRequired\n}\n\nexport default ProfileTop\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileAbout = (\n    {profile:{\n        bio,\n        skills,\n        user:{name}\n    }}\n ) => {\n    return (\n        <div class=\"profile-about bg-light p-2\">\n            {/* taking only first name from the name */}\n          <h2 class=\"text-primary\">{name.trim().split(' ')[0]}'s bio</h2>\n          <p>\n            {bio}\n          </p>\n          <div class=\"line\"></div>\n          <h2 class=\"text-primary\">Skill Set</h2>\n          <div class=\"skills\">\n              {skills.map((skill,index)=>(\n                   <div key = {index} class=\"p-1\"><i class=\"fa fa-check\"></i> {skill}</div>\n    ))}\n           \n          </div>\n        </div>\n    )\n}\n\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired\n}\n\nexport default ProfileAbout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\n\nconst ProfileExperience = ({\n    experience:{\n        title,\n        company,\n        loacation,\n        from,\n        to,\n        description\n    }\n}) => {\n    return (\n        <div>\n            <h3 className='text-dark'>{company}</h3>\n            <p>\n    <Moment format='YYYY/MM/DD'>{from}</Moment>-{!to?\"Now\":<Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n            </p>\n            <p>\n                <strong>Position:</strong>{title}\n            </p>\n            <p>\n                <strong>Description:</strong>{description}\n            </p>\n        </div>\n    )\n}\n\nProfileExperience.propTypes = {\n\n}\n\nexport default ProfileExperience\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\n\nconst ProfileEducation = ({\n    education:{\n        degree,\n        school,\n        fieldofstudy,\n        from,\n        to,\n        description\n    }\n}) => {\n    return (\n        <div>\n            <h3 className='text-dark'>{school}</h3>\n            <p>\n    <Moment format='YYYY/MM/DD'>{from}</Moment>-{!to?\"Now\":<Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n            </p>\n            <p>\n                <strong>Degree:</strong>{degree}\n            </p>\n            <p>\n                <strong>Field Of Study:</strong>{fieldofstudy}\n            </p>\n            <p>\n                <strong>Description:</strong>{description}\n            </p>\n        </div>\n    )\n}\n\nProfileEducation.propTypes = {\n    education: PropTypes.object.isRequired\n}\n\nexport default ProfileEducation\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {getGithubRepos} from '../../actions/profile'\nimport Spinner from '../layout/Spinner'\n\nconst ProfileGithub = ({repos,getGithubRepos,username}) => {\n    useEffect(()=>{\n        getGithubRepos(username)\n    },[getGithubRepos(username)])\n    return (\n        <div className=\"profile-github\">\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\n            {repos === null ? <Spinner></Spinner>:(\n                repos.map(repo=>(\n                    <div key ={repo._id} className='repo bg-white p-1 my-1'>\n                        <div>\n                            <h4>\n                            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {repo.name}\n                                </a>\n                            </h4>\n                <p>{repo.description}</p>\n                        </div>\n                        <ul>\n                <li className='badge badge-light'>Fork: {repo.forks_count}</li>\n                        </ul>\n                    </div>\n                ))\n    )}\n        </div>\n    )\n}\n\nProfileGithub.propTypes = {\n    repos: PropTypes.array.isRequired,\n    getGithubRepos: PropTypes.func.isRequired,\n    username : PropTypes.string.isRequired\n}\nconst mapStateToProps = state =>({\n    repos: state.profile.repos\n})\n\nexport default connect(mapStateToProps,{getGithubRepos}) (ProfileGithub)\n","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Spinner from '../layout/Spinner'\nimport {connect} from 'react-redux'\nimport {getProfileById} from '../../actions/profile' \nimport { Link } from 'react-router-dom'\nimport ProfileTop from './ProfileTop'\nimport ProfileAbout from './ProfileAbout'\nimport ProfileExperience from './ProfileExperience'\nimport ProfileEducation from './ProfileEducation'\nimport ProfileGithub from './ProfileGithub'\n\nconst Profile = ({getProfileById, auth, profile:{profile,loading,_id}, match}) => {\n    useEffect(()=>{\n        getProfileById(match.params.id)\n    },[getProfileById, match.params.id])\n    return(\n        <Fragment>\n            {profile === null||loading ? <Spinner/>:\n            <Fragment>\n                <Link to = '/profiles' className='btn btn-light'>Back to profiles</Link>\n                {auth.isAuthenticated && auth.loading===false && auth.user._id === profile.user._id && <Link to ='/edit-profile' className='btn btn-primary'>Edit profile</Link>}\n                <div class=\"profile-grid my-1\">\n                    <ProfileTop profile={profile}/>\n                    <ProfileAbout profile={profile}/>\n                    <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Experience</h2>{\n                            profile.experience.length>0?(\n                                <Fragment>\n                                    {profile.experience.map(experience=>(<ProfileExperience key={experience._id}experience={experience}/>))}\n                                </Fragment>\n                            ):<h4>No Experience Credentials Found</h4>\n                        }\n                    </div>\n                    <div className=\"profile-edu bg-white p-2\">\n                        <h2 className=\"text-primary\">Education</h2>{\n                            profile.education.length>0?(\n                                <Fragment>\n                                    {profile.education.map(education=>(<ProfileEducation key={education._id}education={education}/>))}\n                                </Fragment>\n                            ):<h4>No Experience Credentials Found</h4>\n                        }\n                    </div>\n                    {profile.githubusername?(<Fragment>\n                        <ProfileGithub username = {profile.githubusername}></ProfileGithub>\n                    </Fragment>):<h4>No github repo found</h4>}\n                </div>\n            </Fragment>}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    profile: PropTypes.object.isRequired,\n    getProfileById: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps,{getProfileById}) (Profile)\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {addLike, removeLike, deletePost} from '../../actions/post'\n\n\nconst PostItem = ({\n    deletePost,\n    addLike,\n    removeLike,\n    auth,\n    post:{_id, text, name, avatar, user, likes, comments,date},\n    showActions\n    }) => {\n    return (\n        <div class=\"posts\">\n        <div class=\"post bg-white p-1 my-1\">\n            <div>\n                    {/* <Link to ={`/profile/${profile.user._id}`}> */}\n                    <Link to ={_id}>\n                    <img\n                        class=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                    </Link>\n                </div>\n          <div>\n            <p class=\"my-1\">\n              {text}\n            </p>\n             <p class=\"post-date\">\n                 Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n            </p>\n            {showActions &&\n             <Fragment>\n                 <button onClick={e=>addLike(_id)} type=\"button\" class=\"btn btn-light\">\n                    <i class=\"fas fa-thumbs-up\"></i>\n                    <span>{\n                            likes.length>0 &&(\n                                <span class='comment-count'>{likes.length}</span>\n                            )\n                        }</span>\n                    </button>\n                <button onClick={e=>removeLike(_id)} type=\"button\" class=\"btn btn-light\">\n                <i class=\"fas fa-thumbs-down\"></i>\n                </button>\n                <Link to ={`/post/${_id}`} class=\"btn btn-primary\">\n                        Discussion \n                        {\n                            comments.length>0 &&(\n                                <span class='comment-count'>{comments.length}</span>\n                            )\n                        }\n                    </Link>\n                    {!auth.loading && user === auth.user._id&&(\n                        <button \n                            onClick = { e => deletePost(_id) }\n                            type=\"button\"\n                            class=\"btn btn-danger\">\n                            <i class=\"fas fa-trash\"></i>\n                        </button>\n                    )}\n            </Fragment>}\n          </div>\n        </div>\n        </div>\n    )\n}\n\nPostItem.defaultProps = {\n    showActions: true\n}\n\nPostItem.propTypes = {\n    post:PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired,\n    deletePost:PropTypes.func.isRequired,\n    addLike:PropTypes.func.isRequired,\n    removeLike:PropTypes.func.isRequired\n}\nconst mapStateToProps = state =>({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps,{addLike,removeLike, deletePost}) (PostItem)\n","import axios from 'axios'\nimport setAlert from './alert'\nimport { GET_POSTS, ADD_COMMENT, REMOVE_COMMENT, GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST} from './types'\n\n//Get GET_POSTS\nexport const getPosts = ()=>async dispatch =>{\n        try {\n            const res = await axios.get('/api/post')\n            dispatch({\n                type:GET_POSTS,\n                payload: res.data\n            })\n        } catch (err) {\n            dispatch({\n                type:POST_ERROR,\n                payload:{msg:err.response.statusText, status:err.response.status}\n            })\n        }\n}\n//Get GET_POST\nexport const getPost = id =>async dispatch =>{\n    try {\n        const res = await axios.get(`/api/post/${id}`)\n        dispatch({\n            type:GET_POST,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n//Add Like\nexport const addLike = id =>async dispatch =>{\n    try {\n        const res = await axios.put(`/api/post/like/${id}`)\n        dispatch({\n            type:UPDATE_LIKES,\n            payload: {id, likes:res.data}\n        })\n    } catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n//Remove Like\nexport const removeLike = id =>async dispatch =>{\n    try {\n        const res = await axios.put(`/api/post/unlike/${id}`)\n        dispatch({\n            type:UPDATE_LIKES,\n            payload: {id, likes:res.data}\n        })\n    } catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n//Delete Post\nexport const deletePost = id =>async dispatch =>{\n    try {\n         await axios.delete(`/api/post/${id}`)\n        dispatch({\n            type:DELETE_POST,\n            payload:id\n        })\n        dispatch(setAlert('Post Has been Deleted','success'))\n    } catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n//ADD Post\nexport const addPost = formData =>async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n    try {\n         const res = await axios.post('/api/post',formData, config)\n        dispatch({\n            type:ADD_POST,\n            payload:res.data\n        })\n        dispatch(setAlert('Post Created','success'))\n    } catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n//ADD Comment\nexport const addComment = (postId,formData) =>async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n    try {\n         const res = await axios.post(`/api/post/comment/${postId}`,formData, config)\n        dispatch({\n            type:ADD_COMMENT,\n            payload:res.data\n        })\n        dispatch(setAlert('Comment Added','success'))\n    } catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}\n//Delete Comment\nexport const removeComment = (postId,commentId) =>async dispatch =>{\n    try {\n         await axios.delete(`/api/post/comment/${postId}/${commentId}`)\n        dispatch({\n            type:REMOVE_COMMENT,\n            payload:commentId\n        })\n        dispatch(setAlert('Comment Removed','success'))\n    } catch (err) {\n        dispatch({\n            type:POST_ERROR,\n            payload:{msg:err.response.statusText, status:err.response.status}\n        })\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {addPost} from '../../actions/post'\nimport { useState } from 'react'\n\nconst PostForm = ({addPost}) => {\n    const [text, setText] = useState('')\n    return (\n        <div class=\"post-form\">\n        <div class=\"bg-primary p\">\n          <h3>Say Something...</h3>\n        </div>\n                <form class=\"form my-1\" onSubmit={e=>{\n                    e.preventDefault()\n                    addPost({text})\n                    setText(' ')}\n        }>\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            rows=\"5\"\n            value={text}\n            onChange={e=>setText(e.target.value)}\n            placeholder=\"Create a post\"\n            required\n          ></textarea>\n          <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n}\n\nPostForm.propTypes = {\n    addPost:PropTypes.func.isRequired\n}\n\nexport default connect(null,{addPost}) (PostForm)\n","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport {getPosts} from '../../actions/post'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport PostItem from './PostItem'\nimport PostForm from './PostForm'\n\nconst Posts = ({getPosts,post:{posts,loading}}) => {\n    useEffect(()=>{\n        getPosts()\n    },[getPosts])\n    return (\n        <Fragment>\n            {loading? <Spinner/>:(<Fragment>\n                <h1 className=' large text-primary'>Posts</h1>\n                <p className='lead'>\n                    <i className='fas fa-user'> Welcome to the community</i>\n                </p>\n                <PostForm/>\n                <div className='posts'>\n                    {posts.map(post=>(\n                        <PostItem key = {post._id} post={post}/>\n                    ))}\n                </div>\n            </Fragment>)}\n        </Fragment>\n    )\n}\n\nPosts.propTypes = {\n    post: PropTypes.object.isRequired,\n    getPosts: PropTypes.func.isRequired\n}\nconst mapStateToProps = state =>({\n    post:state.post\n})\n\nexport default connect(mapStateToProps,{getPosts}) (Posts)\n","import React,{useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {addComment} from '../../actions/post'\n\nconst CommentForm = ({addComment, postId}) => {\n    const [text, setText] = useState('')\n    return (\n        <div class=\"post-form\">\n        <div class=\"bg-primary p\">\n          <h3>Leave a Comment...</h3>\n        </div>\n                <form class=\"form my-1\" onSubmit={e=>{\n                    e.preventDefault()\n                    addComment(postId,{text})\n                    setText(' ')}\n        }>\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            rows=\"5\"\n            value={text}\n            onChange={e=>setText(e.target.value)}\n            placeholder=\"Create a comment\"\n            required\n          ></textarea>\n          <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n}\n\nCommentForm.propTypes = {\n    addComment: PropTypes.func.isRequired\n}\n\nexport default connect(null, {addComment}) (CommentForm)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport Moment from 'react-moment'\nimport {removeComment} from '../../actions/post'\n\nconst CommentItem = ({\n    postId,\n    comment:{_id, text, name, avatar, user, date},\n    auth,\n    removeComment\n})=> {\n    return (\n        <div class=\"post bg-white p-1 my-1\">\n          <div>\n            <Link to = {`/profile/${user}`}>\n              <img\n                class=\"round-img\"\n                src={avatar}\n                alt=\"\"\n              />\n              <h4>{name}</h4>\n            </Link>\n          </div>\n          <div>\n            <p class=\"my-1\">\n              {text}\n            </p>\n             <p class=\"post-date\">\n    Posted on <Moment format =\"YYYY/MM/DD\">{date}</Moment>\n            </p>\n            {!auth.loading && user === auth.user._id&&(\n                        <button \n                            onClick = { e => removeComment(postId, _id) }\n                            type=\"button\"\n                            class=\"btn btn-danger\">\n                            <i class=\"fas fa-trash\"></i>\n                        </button>\n                    )}\n          </div>\n        </div>\n    )\n}\n\nCommentItem.propTypes = {\n    postId: PropTypes.number.isRequired,\n    comment: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    removeComment: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state =>({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps,{removeComment})(CommentItem)\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Spinner from '../layout/Spinner'\nimport {connect} from 'react-redux'\nimport {getPost} from '../../actions/post'\nimport CommentForm from './CommentForm'\nimport CommentItem from './CommentItem'\nimport PostItem from '../posts/PostItem'\nimport { Fragment } from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Post = ({getPost, post:{loading,post}, match}) => {\n    useEffect(()=>{\n        getPost(match.params.id)\n    },[getPost])\n    return (\n            loading ? <Spinner/>: <Fragment>\n                <Link to ='/posts' className='btn'>Go Back</Link>\n                <PostItem post ={post} showActions = {false}/>\n                <CommentForm postId = {post._id} />\n                <div className='comments'>\n                    {post.comments.map(comment=>(\n                        <CommentItem key={comment._id} comment = {comment} postId ={post._id} />\n                    ))}\n                </div>\n            </Fragment>     \n    )\n}\n\nPost.propTypes = {\n    post: PropTypes.object.isRequired,\n    getPost:PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state =>({\n    post : state.post\n})\n\nexport default connect(mapStateToProps, {getPost}) (Post)\n","import {SET_ALERT, REMOVE_ALERT} from '../actions/types'\n\nconst initialState =[]\n\nconst alert = (state = initialState, action)=>{\n    const {type, payload} = action\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state,payload]\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !==payload)\n        default:\n            return state\n    }\n}\n\nexport default alert","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    DELETE_ACCOUNT\n} from '../actions/types'\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading:true,\n    user: null\n}\n\nconst auth = (state = initialState, action)=>{\n    const {type, payload} = action\n\n    switch (type) {\n        case USER_LOADED:\n            return{\n                ...state,\n                user: payload,\n                isAuthenticated: true,\n                loading:false\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token)\n            return{\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading:false\n            }\n        case REGISTER_FAIL:\n        case LOGIN_FAIL:\n        case AUTH_ERROR:\n        case LOGOUT:\n        case DELETE_ACCOUNT:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading:false\n            }\n        default:\n            return state\n    }\n}\n\nexport default auth","import { GET_PROFILE, PROFILE_ERROR , CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOS} from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    profiles:[],\n    repos:[],\n    loading:true,\n    error:{}\n}\n\nconst profile = (state =initialState, action)=>{\n    const {type, payload} = action\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return{\n                ...state,\n                profile:payload,\n                loading:false\n            }\n        case GET_PROFILES:\n            return{\n                ...state,\n                profiles:payload,\n                loading:false\n            }\n        case PROFILE_ERROR:\n            return{\n                ...state, \n                error:payload,\n                loading:false\n            }\n        case CLEAR_PROFILE:\n            return{\n                ...state, \n                profile:null,\n                repos:[],\n                loading:false\n                }\n            case GET_REPOS:\n                return{\n                    ...state, \n                    repos:payload,\n                    loading:false\n                }\n        default:\n            return state\n    }\n}\n\nexport default profile ","import {\n     ADD_COMMENT,\n     REMOVE_COMMENT,\n     ADD_POST, \n     GET_POST, \n     DELETE_POST, \n     GET_POSTS, \n     POST_ERROR, \n     UPDATE_LIKES\n    } from \"../actions/types\";\n\nconst initialState = {\n    post: null,\n    posts:[],\n    loading:true,\n    error:{}\n}\n\nexport const post = (state =initialState, action)=>{\n    const {type, payload} = action\n    switch (type) {\n        case GET_POSTS:\n            return{\n                ...state,\n                posts:payload,\n                loading:false\n            }\n        case GET_POST:\n                return{\n                    ...state,\n                    post:payload,\n                    loading:false\n                }\n        case POST_ERROR:\n            return{\n                ...state,\n                error:payload,\n                loading:false\n            }\n        case UPDATE_LIKES:\n            return{\n                ...state,\n                posts:state.posts.map(post=>post._id === payload.id ?{...post,likes:payload.likes}: post ),\n                loading: false\n            }\n        case ADD_POST:\n            return{\n                ...state,\n                posts:[...state.posts,payload],\n                loading: false\n            }\n        case ADD_COMMENT:\n                return{\n                    ...state,\n                    post:{...state.post,comments:payload},\n                    loading: false\n                }\n        case REMOVE_COMMENT:\n                    return{\n                        ...state,\n                        post:{\n                            ...state.post,\n                            comments:state.post.comments.filter(comment => comment._id !== payload)\n                        },\n                        loading: false\n                    }\n        case DELETE_POST:\n            return{\n                ...state,\n                posts: state.posts.filter(post => post._id !==payload),\n                loading: false\n            }\n            default:{\n                return state\n            }\n        }\n    }\n","import {combineReducers} from 'redux'\nimport alert from \"./alert\"\nimport auth from './auth'\nimport profile from './profile'\nimport {post} from './post'\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    post\n})","import {createStore, applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n \nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n) \n\nexport default store\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {addEducation} from '../../actions/profile'\nimport {Link, withRouter} from 'react-router-dom'\n\nconst AddEducation = ({addEducation,history}) => {\n    const [formData, setFormData] = useState({\n        degree:\"\",\n        school:\"\",\n        fieldofstudy:\"\",\n        from:\"\",\n        to:\"\",\n        current:false,\n        description:\"\"\n    })\n\n    const [toDateDisabled, toggleDisabled] = useState(false)\n    const {degree, school, fieldofstudy, from, to, current, description} = formData\n\n    const onChange = e=> setFormData({...formData, [e.target.name]: e.target.value})\n\n    return (\n        <Fragment>\n             <h1 className=\"large text-primary\">\n                 Add Your Education\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp you ever attended\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=>{\n                e.preventDefault()\n                addEducation(formData,history)\n            }}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Add Degree\" name=\"degree\" value={degree} onChange = { e => onChange(e) } required />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* School\" name=\"school\" value={school} onChange = { e => onChange(e) } required  />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"fieldofstudy\" name=\"fieldofstudy\" value = {fieldofstudy} onChange = { e => onChange(e) } />\n                </div>\n                <div className=\"form-group\">\n                <h4>From Date</h4>\n                <input type=\"date\" name=\"from\" value={from} onChange = { e => onChange(e) } />\n                </div>\n                <div className=\"form-group\">\n                <p><input type=\"checkbox\" checked = {current} name=\"current\" value={current} onChange = { e =>{\n                    setFormData({...formData,current:!current})\n                    toggleDisabled(!toDateDisabled)\n                }} /> {' '}Currently pursuing</p>\n                </div>\n                <div className=\"form-group\">\n                <h4>To Date</h4>\n                <input type=\"date\" name=\"to\" value={to} onChange = { e => onChange(e)} disabled ={toDateDisabled ? 'disabled':''}/>\n                </div>\n                <div className=\"form-group\">\n                <textarea\n                    name=\"description\"\n                    cols=\"30\"\n                    rows=\"5\"\n                    placeholder=\"Course Description\"\n                    value={description}\n                    onChange = { e => onChange(e) }\n                ></textarea>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nAddEducation.propTypes = {\n    addExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, {addEducation}) (withRouter(AddEducation))\n","import './App.css';\nimport {Fragment, useEffect} from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Landing from './components/layout/Landing'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\nimport Alert from './components/layout/Alert'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PrivateRoute from './components/routing/PrivateRoute'\nimport CreateProfile from './components/profile-form/CreateProfile'\nimport EditProfile from './components/profile-form/EditProfile'\nimport AddExperience from './components/profile-form/AddExperience'\nimport Profiles from './components/profiles/Profiles'\nimport Profile from './components/profile/Profile'\nimport Posts from './components/posts/Posts'\nimport Post from './components/post/Post'\n// Redux\n\n\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport AddEducation from './components/profile-form/AddEducation';\n\nif(localStorage.token){\n  setAuthToken(localStorage.token)\n}\n\nconst App = ()=> {\n  useEffect(()=>{\n    store.dispatch(loadUser())\n  },[])\n  return (\n    <Provider store = {store}>\n      <Router>\n        <Fragment>\n          <Navbar/>\n          <Route exact path = '/' component = {Landing}/>\n          <section className = \"container\">\n            <Alert/>\n            <Switch>\n            <Route exact path = '/Login' component = {Login}/>\n            <Route exact path = '/Register' component = {Register}/>\n            <Route exact path = '/profiles' component = {Profiles}/>\n            <Route exact path = '/profile/:id' component = {Profile}/>\n            <PrivateRoute exact path = '/dashboard' component = {Dashboard}/>\n            <PrivateRoute exact path = '/create-profile' component = {CreateProfile}/>\n            <PrivateRoute exact path = '/edit-profile' component = {EditProfile}/>\n            <PrivateRoute exact path = '/add-experience' component = {AddExperience}/>\n            <PrivateRoute exact path = '/add-education' component = {AddEducation}/>\n            <PrivateRoute exact path = '/posts' component = {Posts}/>\n            <PrivateRoute exact path = '/post/:id' component = {Post}/>\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  )\n      \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}